<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DSN SDK for Java</title>
    <url>/2023/02/13/DSN%20SDK%20for%20Java/</url>
    <content><![CDATA[<h1 id="DSN-SDK-for-Java-版本-1-0-1-2"><a href="#DSN-SDK-for-Java-版本-1-0-1-2" class="headerlink" title="DSN SDK for Java, 版本 1.0.1.2"></a>DSN SDK for Java, 版本 1.0.1.2</h1><p>BDP-DSN为 BDP 平台的统一数据存储服务。DSN SDK 提供了 BDP-DSN 服务的 Java API。使用 SDK，可以构建配合的使用的 Java 应用程序。</p>
<h3 id="一、DSN-DB"><a href="#一、DSN-DB" class="headerlink" title="一、DSN-DB"></a>一、DSN-DB</h3><p>DSN-DB 提供了 DSN 服务的结构化数据存储读取的接口，通过该工具包，可以实现对 DSN 结构化数据的操作。</p>
<h4 id="1-设置Maven项目"><a href="#1-设置Maven项目" class="headerlink" title="1.设置Maven项目"></a>1.设置Maven项目</h4><p>1、在Maven项目的pom.xml文件中，添加开发工具包依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.cosmobdai.bdp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dsn-db<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2、重新构建项目</p>
<p>配置 <code>pom.xml</code> 文件后，使用 Maven 构建项目。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure>

<h4 id="2-使用SDK"><a href="#2-使用SDK" class="headerlink" title="2.使用SDK"></a>2.使用SDK</h4><h5 id="结构化数据查询类操作："><a href="#结构化数据查询类操作：" class="headerlink" title="结构化数据查询类操作："></a>结构化数据查询类操作：</h5><p>1、创建客户端 <code>DsnDb</code>，配置 DSN 服务的地址和端口。</p>
<p>2、执行查询类操作，参数为目标的 SQL 语句。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">queryTest</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">DsnDb</span> <span class="variable">dsnDb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnDb</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    <span class="type">QueryResult</span> <span class="variable">queryResult</span> <span class="operator">=</span> dsnDb.query(<span class="string">&quot;select * from table1&quot;</span>);</span><br><span class="line">    System.out.println(queryResult.getData().toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="结构化数据执行类操作："><a href="#结构化数据执行类操作：" class="headerlink" title="结构化数据执行类操作："></a>结构化数据执行类操作：</h5><p>1、创建客户端 <code>DsnDb</code>，配置 DSN 服务的地址和端口。</p>
<p>2、执行执行类操作，参数为目标的 SQL 语句。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">executeTest</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">DsnDb</span> <span class="variable">dsnDb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnDb</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    <span class="type">ExecuteResult</span> <span class="variable">executeResult</span> <span class="operator">=</span> dsnDb.execute(<span class="string">&quot;create table table2(user_id int,user_name int)&quot;</span>);</span><br><span class="line">    System.out.println(executeResult.isResult());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="二、DSN-Medata模块"><a href="#二、DSN-Medata模块" class="headerlink" title="二、DSN-Medata模块"></a>二、DSN-Medata模块</h3><p>DSN-Metadata 提供了 DSN 服务的元数据相关操作的接口，通过该工具包，可以实现对 DSN 元数据的管理。</p>
<h4 id="1-设置Maven项目-1"><a href="#1-设置Maven项目-1" class="headerlink" title="1.设置Maven项目"></a>1.设置Maven项目</h4><p>1、在Maven项目的pom.xml文件中，添加开发工具包依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.cosmobdai.bdp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dsn-metadata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2、重新构建项目</p>
<p>配置 <code>pom.xml</code> 文件后，使用 Maven 构建项目。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn package</span><br></pre></td></tr></table></figure>

<h4 id="2-使用SDK-1"><a href="#2-使用SDK-1" class="headerlink" title="2.使用SDK"></a>2.使用SDK</h4><h5 id="查看元数据列表："><a href="#查看元数据列表：" class="headerlink" title="查看元数据列表："></a>查看元数据列表：</h5><p>1、创建客户端 <code>DsnMetadata</code>，配置 DSN 服务的地址和端口。</p>
<p>2、执行查看元数据列表。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listMetadata</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">DsnMetadata</span> <span class="variable">dsnMetadata</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnMetadata</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    <span class="type">BaseApiResponse</span> <span class="variable">response</span> <span class="operator">=</span> dsnMetadata.listMetadata();</span><br><span class="line">    System.out.println(response.getData().toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="删除文件："><a href="#删除文件：" class="headerlink" title="删除文件："></a>删除文件：</h5><p>1、创建客户端 <code>DsnMetadata</code>，配置 DSN 服务的地址和端口。</p>
<p>2、删除指定 id 的文件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteFile</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">DsnMetadata</span> <span class="variable">dsnMetadata</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnMetadata</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    dsnMetadata.deleteFile(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="导出文件："><a href="#导出文件：" class="headerlink" title="导出文件："></a>导出文件：</h5><p>1、创建客户端 <code>DsnMetadata</code>，配置 DSN 服务的地址和端口。</p>
<p>2、配置<code>MetadataExport</code>，设置元数据 id ，导出目录，是否导出至本地等。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportFile</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">DsnMetadata</span> <span class="variable">dsnMetadata</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnMetadata</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    <span class="type">MetadataExport</span> <span class="variable">metadataExport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MetadataExport</span>();</span><br><span class="line">    metadataExport.setId(<span class="number">5</span>);</span><br><span class="line">    <span class="type">FileExportResponse</span> <span class="variable">response</span> <span class="operator">=</span> dsnMetadata.exportFile(metadataExport);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(response.getData().getFileByte(), StandardCharsets.UTF_8);</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="导入文件："><a href="#导入文件：" class="headerlink" title="导入文件："></a>导入文件：</h5><p>1、创建客户端 <code>DsnMetadata</code>，配置 DSN 服务的地址和端口。</p>
<p>2、配置<code>MetadataImport</code>，设置文件源，存储位置等。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">importHiveFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">DsnMetadata</span> <span class="variable">dsnMetadata</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DsnMetadata</span>(<span class="string">&quot;192.168.0.1:2345&quot;</span>);</span><br><span class="line">    <span class="type">MetadataImport</span> <span class="variable">metadataImport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MetadataImport</span>();</span><br><span class="line">    metadataImport.setPath(<span class="string">&quot;db:/table1&quot;</span>);</span><br><span class="line">    metadataImport.setLocal(<span class="literal">false</span>);</span><br><span class="line">    metadataImport.setFilePath(<span class="string">&quot;/tmp/file&quot;</span>);</span><br><span class="line">    <span class="type">BaseApiResponse</span> <span class="variable">response</span> <span class="operator">=</span> dsnMetadata.importFile(metadataImport);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>产品技术</tag>
      </tags>
  </entry>
  <entry>
    <title>BD&amp;AI 创研中心 居家办公不完全指南</title>
    <url>/2022/05/24/BD-AI-%E5%88%9B%E7%A0%94%E4%B8%AD%E5%BF%83-%E5%B1%85%E5%AE%B6%E5%8A%9E%E5%85%AC%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本指南有效期 2022-5-24 ~ 2022-5-27</span><br></pre></td></tr></table></figure>


<p>本指南主要面向想居家办公或强制被干活的小伙伴们参考制定，不解释公司规定、人性化执行公司规定。最终解释权归 BD&amp;AI 创研中心正副经理所有！！</p>
<hr>
<p><strong>重要声明</strong></p>
<p>截止 2022-5-24 11 时 公司未发出关于居家办公处理事项，所有当前居家办公&#x3D;放假。<br>也就是说，当前所有人都处于公司假期制度内的狭义放假状态，公司层面都会扣除部分假期（年假、病假、事假、婚假、陪产假等等员工手册中的员工假期）</p>
<hr>
<blockquote>
<p>我努力居家办公（疯狂干活）了，我的钱钱和我的快乐时光能回来吗？</p>
</blockquote>
<ul>
<li>不要担心，钱钱一直都没丢（蟹老板除外）。BD&amp;AI 创研中心的原则是，游走在公司和部门以及员工的规则规定之间，让大家损失最小化。虽然在公司层面，我们丢了假期，但是在部门层面，BD&amp;AI 创研中心会给大家补假期；虽然在公司层面，我们丢了钱（指无带薪假或试用期的小伙伴们），但是在部门层面，BD&amp;AI 创研中心会给大家奖金&#x2F;季度绩效&#x2F;薪资调整的形式补回来！</li>
</ul>
<h2 id="指南-1：居家自我选择指南"><a href="#指南-1：居家自我选择指南" class="headerlink" title="指南 1：居家自我选择指南"></a>指南 1：居家自我选择指南</h2><h3 id="情形1：在家工作"><a href="#情形1：在家工作" class="headerlink" title="情形1：在家工作"></a>情形1：在家工作</h3><blockquote>
<p>你现在的工作内容，短期内要上线了！！！！！！</p>
</blockquote>
<p>所有被天降大任有要紧工作的的小伙伴们，每天晚6点前，以日报&#x2F;产出物（代码、文档等多种产出物）的形式向部门（正或副）经理汇报。</p>
<h3 id="情形2：很想在家工作"><a href="#情形2：很想在家工作" class="headerlink" title="情形2：很想在家工作"></a>情形2：很想在家工作</h3><blockquote>
<p>是是是，我知道，别人都有居家办公，你的同学、前同事、亲戚、朋友、长辈、小辈、七大姑八大姨，在家工作和在单位一样，但是我们在这不行！</p>
</blockquote>
<p>当前部门产品研发计划已经整体延后了，但是并不代表部门科技树停止生长了，这段时间可以做一些创新型调研、设计、研究、研发、计划…..都可以，但是必须认真贯彻落实符合部门的发展方向或者产品的研发计划才行，所以这部分小伙伴们干的活需要正&#x2F;副经理评估，评估通过每天晚6点前，以日报&#x2F;产出物（代码、文档等多种产出物）的形式向部门（正或副）经理汇报。评估不通过换个方向重新来过！</p>
<h3 id="情形3：想在家工作"><a href="#情形3：想在家工作" class="headerlink" title="情形3：想在家工作"></a>情形3：想在家工作</h3><blockquote>
<p>你有VPN，你想学习，你想提升自己，你想用现在已有的活提升自己！</p>
</blockquote>
<p>虽然你没楼上的小伙伴们意识强烈，但你也是一个向上之人。推进的工作和内容每天晚6点前，以日报&#x2F;产出物（代码、文档等多种产出物）的形式向对应组的钉钉群里发日报即可。<br>操作如下：</p>
<p><a href="https://imgtu.com/i/XCoRSI"><img src="https://s1.ax1x.com/2022/05/24/XCoRSI.png" alt="XCoRSI.png"></a></p>
<p><a href="https://imgtu.com/i/XCo5m8"><img src="https://s1.ax1x.com/2022/05/24/XCo5m8.png" alt="XCo5m8.png"></a></p>
<h3 id="情形4：不想工作"><a href="#情形4：不想工作" class="headerlink" title="情形4：不想工作"></a>情形4：不想工作</h3><blockquote>
<p>躺平! 虽然不是很鼓励大家躺平，但是这段时间从公司层面讲就是自己的假期时间，自己的假期时间做点自己喜欢的事为什么不好呢！</p>
</blockquote>
<p>读书！看电影！学习！上分！睡觉！养精蓄锐！尝试做复杂的菜！下载宫崎英高的游戏！带孩子！不奔现的网恋！当畊宏男&#x2F;女孩！……太多的事要做了。放心做，BD&amp;AI 创研中心会将放假成本降至最低！</p>
<h2 id="指南-2：利益如何保证损失最低"><a href="#指南-2：利益如何保证损失最低" class="headerlink" title="指南 2：利益如何保证损失最低"></a>指南 2：利益如何保证损失最低</h2><p>在假期期间进行了居家办公、干了活。BD&amp;AI 创研中心暂时能给（在公司层面大动作之前）小伙伴们的就是无偿补假和多绩效奖金。无偿补假是待疫情缓和时，即收到对应的假期补贴，可以随时花费（但是等同年假，每年年底清零）。请假方式（提交一个外出，内容随便写一个项目，然后给部门正\副经理说明情况，即可放假）。多绩效奖金是指，小伙伴们季度绩效评审时，可额外获得分数加成，参加评优、晋升等等。</p>
<h2 id="指南-3：社区形势骤变处理方式"><a href="#指南-3：社区形势骤变处理方式" class="headerlink" title="指南 3：社区形势骤变处理方式"></a>指南 3：社区形势骤变处理方式</h2><p>及时联系 正&#x2F;副经理（重要） ！！！！！！千万不要四处散播（尤其是部门外的人）自身所处环境的信息，保证处理安全化。</p>
]]></content>
      <tags>
        <tag>疫情</tag>
      </tags>
  </entry>
</search>
